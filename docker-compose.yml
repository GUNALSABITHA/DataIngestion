version: '3.8'

services:
  # PostgreSQL Data Warehouse
  postgres:
    image: postgres:15-alpine
    container_name: data_ingestion_postgres
    environment:
      POSTGRES_DB: data_warehouse
      POSTGRES_USER: datauser
      POSTGRES_PASSWORD: datapass123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U datauser -d data_warehouse"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - data_network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: data_ingestion_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - data_network

  # PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: data_ingestion_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dataingestion.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8087:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - data_network
  kafka:
      image: apache/kafka:3.7.0
      container_name: kafka
      ports:
        - "9092:9092"
      environment:
        # KRaft mode (no ZooKeeper)
        KAFKA_NODE_ID: 1
        KAFKA_PROCESS_ROLES: broker,controller
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
        KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  data_network:
    driver: bridge